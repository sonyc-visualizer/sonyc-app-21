{"ast":null,"code":"var _jsxFileName = \"/Users/almazhan/Desktop/sonyc-app-1/src/graphs/VisualizerAQ.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react'; //Important! Below the mock data is imported from the utils folder\n\nimport { dataGeo } from '../utils/MockData.js';\nimport { dataAQ } from '../utils/MockDataAq.js';\nimport Header from '../components/Header';\nimport Footer from '../components/Footer';\nimport Selector from '../components/Selector';\nimport Histogram from './Histogram';\nimport BarChart from './BarChart';\nimport BoxPlot from './BoxPlot';\nimport Correlation from './Correlation';\nimport AreaChart from './AreaChart';\nimport HeatMap from './HeatMap';\nimport LineGraph from './LineGraph';\nimport ScatterPlot from './ScatterPlot';\nimport './Visualizer.css';\nimport { useState } from 'react'; //Main component that displays your created graph\n//Components in React can be in the form of functions, classes etc.\n//and consist of both javascript code and html code (html is the return value)\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction VisualizerAQ() {\n  _s();\n\n  const dataKeysAq = Object.keys(dataAQ[0]);\n  const [histoXAttr, setHistoXAttr] = useState('ID'); //scatter plot attributes\n\n  const [ScatoXAttr, setScatoXAttr] = useState('ID');\n  const [ScatoYAttr, setScatoYAttr] = useState('ID'); //box plot attributes\n\n  const [boxPlotXAttr, setBoxPlotXAttr] = useState('ID');\n  const [boxPlotYAttr, setBoxPlotYAttr] = useState('Time'); //line graph attributes\n\n  const [lineGraphXAttr, setlineGraphXAttr] = useState('ID');\n  const [lineGraphYAttr, setlineGraphYAttr] = useState('ID'); //bar chart attributes\n\n  const [barChartXAttr, setBarChartXAttr] = useState('ID');\n  const [barChartYAttr, setBarChartYAttr] = useState('ID'); //area chart attributes\n\n  const [areaChartXAttr, setAreaChartXAttr] = useState('ID');\n  const [areaChartYAttr, setAreaChartYAttr] = useState('ID'); //Below is the html code (return value)\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"home-graphs\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"header-text-graphs\",\n        children: \"SONYC Visualizer App\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"graph-wrapper\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"graph-block\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Histogram\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Histogram, {\n            data: dataAQ,\n            xAxisAttribute: histoXAttr //title={`People from Different ${histoXAttr}`}\n            ,\n            title: `Histogram Distribution of Air Quality data`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: \"X Axis\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"select\", {\n                onChange: e => setHistoXAttr(e.target.value),\n                children: dataKey.map(key => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: key,\n                  children: key\n                }, key, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 69,\n                  columnNumber: 21\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"graph-block\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Scatter Plot\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ScatterPlot, {\n            data: dataGeo,\n            xAxisAttribute: ScatoXAttr,\n            yAxisAttribute: ScatoYAttr\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"wrap-axis\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"x-axis\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: \"X Axis\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(\"select\", {\n                  onChange: e => setScatoXAttr(e.target.value),\n                  children: dataKey.map(key => /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: key,\n                    children: key\n                  }, key, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 91,\n                    columnNumber: 23\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 89,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"y-axis\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: \"Y Axis\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(\"select\", {\n                  onChange: e => setScatoYAttr(e.target.value),\n                  children: dataKey.map(key => /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: key,\n                    children: key\n                  }, key, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 103,\n                    columnNumber: 23\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 101,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"graph-block\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"BoxPlot\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(BoxPlot, {\n            data: dataGeo,\n            xAxisAttribute: boxPlotXAttr,\n            yAxisAttribute: boxPlotYAttr\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"wrap-axis\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"x-axis\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: \"X Axis\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 122,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(\"select\", {\n                  onChange: e => setBoxPlotXAttr(e.target.value),\n                  children: dataKey.map(key => /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: key,\n                    children: key\n                  }, key, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 126,\n                    columnNumber: 23\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 124,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 123,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"y-axis\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: \"Y Axis\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 134,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(\"select\", {\n                  onChange: e => setBoxPlotYAttr(e.target.value),\n                  children: dataKey.map(key => /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: key,\n                    children: key\n                  }, key, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 138,\n                    columnNumber: 23\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 136,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 135,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"graph-block\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Line Graph\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(LineGraph, {\n            data: dataGeo,\n            xAxisAttribute: lineGraphXAttr,\n            yAxisAttribute: lineGraphYAttr\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"wrap-axis\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"x-axis\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: \"X Axis\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 157,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(\"select\", {\n                  onChange: e => setlineGraphXAttr(e.target.value),\n                  children: dataKey.map(key => /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: key,\n                    children: key\n                  }, key, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 161,\n                    columnNumber: 23\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 159,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 158,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"y-axis\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: \"Y Axis\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 169,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(\"select\", {\n                  onChange: e => setlineGraphYAttr(e.target.value),\n                  children: dataKey.map(key => /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: key,\n                    children: key\n                  }, key, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 173,\n                    columnNumber: 23\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 171,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 170,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"graph-block\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Bar Chart\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(BarChart, {\n            data: dataGeo,\n            xAxisAttribute: barChartXAttr,\n            yAxisAttribute: barChartYAttr\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"wrap-axis\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"x-axis\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: \"X Axis\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 192,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(\"select\", {\n                  onChange: e => setBarChartXAttr(e.target.value),\n                  children: dataKey.map(key => /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: key,\n                    children: key\n                  }, key, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 196,\n                    columnNumber: 23\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 194,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 193,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"y-axis\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: \"Y Axis\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 204,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(\"select\", {\n                  onChange: e => setBarChartYAttr(e.target.value),\n                  children: dataKey.map(key => /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: key,\n                    children: key\n                  }, key, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 208,\n                    columnNumber: 23\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 206,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 205,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"graph-block\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Area Chart\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(AreaChart, {\n            data: dataGeo,\n            xAxisAttribute: areaChartXAttr,\n            yAxisAttribute: areaChartYAttr\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"wrap-axis\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"x-axis\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: \"X Axis\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 227,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(\"select\", {\n                  onChange: e => setAreaChartXAttr(e.target.value),\n                  children: dataKey.map(key => /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: key,\n                    children: key\n                  }, key, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 231,\n                    columnNumber: 23\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 229,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 228,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"y-axis\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: \"Y Axis\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 239,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(\"select\", {\n                  onChange: e => setAreaChartYAttr(e.target.value),\n                  children: dataKey.map(key => /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: key,\n                    children: key\n                  }, key, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 243,\n                    columnNumber: 23\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 241,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 240,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(VisualizerAQ, \"wvjp1cnXLMjnSBoi+5oT//M5oPc=\");\n\n_c = VisualizerAQ;\nexport default VisualizerAQ;\n\nvar _c;\n\n$RefreshReg$(_c, \"VisualizerAQ\");","map":{"version":3,"sources":["/Users/almazhan/Desktop/sonyc-app-1/src/graphs/VisualizerAQ.js"],"names":["React","dataGeo","dataAQ","Header","Footer","Selector","Histogram","BarChart","BoxPlot","Correlation","AreaChart","HeatMap","LineGraph","ScatterPlot","useState","VisualizerAQ","dataKeysAq","Object","keys","histoXAttr","setHistoXAttr","ScatoXAttr","setScatoXAttr","ScatoYAttr","setScatoYAttr","boxPlotXAttr","setBoxPlotXAttr","boxPlotYAttr","setBoxPlotYAttr","lineGraphXAttr","setlineGraphXAttr","lineGraphYAttr","setlineGraphYAttr","barChartXAttr","setBarChartXAttr","barChartYAttr","setBarChartYAttr","areaChartXAttr","setAreaChartXAttr","areaChartYAttr","setAreaChartYAttr","e","target","value","dataKey","map","key"],"mappings":"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","sourcesContent":["import React from 'react'\n//Important! Below the mock data is imported from the utils folder\nimport { dataGeo } from '../utils/MockData.js'\nimport { dataAQ } from '../utils/MockDataAq.js'\nimport Header from '../components/Header'\nimport Footer from '../components/Footer'\nimport Selector from '../components/Selector'\nimport Histogram from './Histogram'\nimport BarChart from './BarChart'\nimport BoxPlot from './BoxPlot'\nimport Correlation from './Correlation'\nimport AreaChart from './AreaChart'\nimport HeatMap from './HeatMap'\nimport LineGraph from './LineGraph'\nimport ScatterPlot from './ScatterPlot'\nimport './Visualizer.css'\n\nimport { useState } from 'react'\n\n//Main component that displays your created graph\n//Components in React can be in the form of functions, classes etc.\n//and consist of both javascript code and html code (html is the return value)\nfunction VisualizerAQ() {\n  const dataKeysAq = Object.keys(dataAQ[0])\n  const [histoXAttr, setHistoXAttr] = useState('ID')\n\n  //scatter plot attributes\n  const [ScatoXAttr, setScatoXAttr] = useState('ID')\n  const [ScatoYAttr, setScatoYAttr] = useState('ID')\n\n  //box plot attributes\n  const [boxPlotXAttr, setBoxPlotXAttr] = useState('ID')\n  const [boxPlotYAttr, setBoxPlotYAttr] = useState('Time')\n\n  //line graph attributes\n  const [lineGraphXAttr, setlineGraphXAttr] = useState('ID')\n  const [lineGraphYAttr, setlineGraphYAttr] = useState('ID')\n\n  //bar chart attributes\n  const [barChartXAttr, setBarChartXAttr] = useState('ID')\n  const [barChartYAttr, setBarChartYAttr] = useState('ID')\n\n  //area chart attributes\n  const [areaChartXAttr, setAreaChartXAttr] = useState('ID')\n  const [areaChartYAttr, setAreaChartYAttr] = useState('ID')\n\n  //Below is the html code (return value)\n  return (\n    <>\n      <Header />\n      <div className=\"home-graphs\">\n        <h2 className=\"header-text-graphs\">SONYC Visualizer App</h2>\n\n        <div className=\"graph-wrapper\">\n          <div className=\"graph-block\">\n            <p>Histogram</p>\n            <Histogram\n              data={dataAQ}\n              xAxisAttribute={histoXAttr}\n              //title={`People from Different ${histoXAttr}`}\n              title={`Histogram Distribution of Air Quality data`}\n            ></Histogram>\n\n            <div>\n              <div>X Axis</div>\n              <div>\n                <select onChange={(e) => setHistoXAttr(e.target.value)}>\n                  {dataKey.map((key) => (\n                    <option key={key} value={key}>\n                      {key}\n                    </option>\n                  ))}\n                </select>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"graph-block\">\n            <p>Scatter Plot</p>\n            <ScatterPlot\n              data={dataGeo}\n              xAxisAttribute={ScatoXAttr}\n              yAxisAttribute={ScatoYAttr}\n            ></ScatterPlot>\n            <div className=\"wrap-axis\">\n              <div className=\"x-axis\">\n                <div>X Axis</div>\n                <div>\n                  <select onChange={(e) => setScatoXAttr(e.target.value)}>\n                    {dataKey.map((key) => (\n                      <option key={key} value={key}>\n                        {key}\n                      </option>\n                    ))}\n                  </select>\n                </div>\n              </div>\n              <div className=\"y-axis\">\n                <div>Y Axis</div>\n                <div>\n                  <select onChange={(e) => setScatoYAttr(e.target.value)}>\n                    {dataKey.map((key) => (\n                      <option key={key} value={key}>\n                        {key}\n                      </option>\n                    ))}\n                  </select>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"graph-block\">\n            <p>BoxPlot</p>\n            <BoxPlot\n              data={dataGeo}\n              xAxisAttribute={boxPlotXAttr}\n              yAxisAttribute={boxPlotYAttr}\n            ></BoxPlot>\n            <div className=\"wrap-axis\">\n              <div className=\"x-axis\">\n                <div>X Axis</div>\n                <div>\n                  <select onChange={(e) => setBoxPlotXAttr(e.target.value)}>\n                    {dataKey.map((key) => (\n                      <option key={key} value={key}>\n                        {key}\n                      </option>\n                    ))}\n                  </select>\n                </div>\n              </div>\n              <div className=\"y-axis\">\n                <div>Y Axis</div>\n                <div>\n                  <select onChange={(e) => setBoxPlotYAttr(e.target.value)}>\n                    {dataKey.map((key) => (\n                      <option key={key} value={key}>\n                        {key}\n                      </option>\n                    ))}\n                  </select>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"graph-block\">\n            <p>Line Graph</p>\n            <LineGraph\n              data={dataGeo}\n              xAxisAttribute={lineGraphXAttr}\n              yAxisAttribute={lineGraphYAttr}\n            ></LineGraph>\n            <div className=\"wrap-axis\">\n              <div className=\"x-axis\">\n                <div>X Axis</div>\n                <div>\n                  <select onChange={(e) => setlineGraphXAttr(e.target.value)}>\n                    {dataKey.map((key) => (\n                      <option key={key} value={key}>\n                        {key}\n                      </option>\n                    ))}\n                  </select>\n                </div>\n              </div>\n              <div className=\"y-axis\">\n                <div>Y Axis</div>\n                <div>\n                  <select onChange={(e) => setlineGraphYAttr(e.target.value)}>\n                    {dataKey.map((key) => (\n                      <option key={key} value={key}>\n                        {key}\n                      </option>\n                    ))}\n                  </select>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"graph-block\">\n            <p>Bar Chart</p>\n            <BarChart\n              data={dataGeo}\n              xAxisAttribute={barChartXAttr}\n              yAxisAttribute={barChartYAttr}\n            ></BarChart>\n            <div className=\"wrap-axis\">\n              <div className=\"x-axis\">\n                <div>X Axis</div>\n                <div>\n                  <select onChange={(e) => setBarChartXAttr(e.target.value)}>\n                    {dataKey.map((key) => (\n                      <option key={key} value={key}>\n                        {key}\n                      </option>\n                    ))}\n                  </select>\n                </div>\n              </div>\n              <div className=\"y-axis\">\n                <div>Y Axis</div>\n                <div>\n                  <select onChange={(e) => setBarChartYAttr(e.target.value)}>\n                    {dataKey.map((key) => (\n                      <option key={key} value={key}>\n                        {key}\n                      </option>\n                    ))}\n                  </select>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"graph-block\">\n            <p>Area Chart</p>\n            <AreaChart\n              data={dataGeo}\n              xAxisAttribute={areaChartXAttr}\n              yAxisAttribute={areaChartYAttr}\n            ></AreaChart>\n            <div className=\"wrap-axis\">\n              <div className=\"x-axis\">\n                <div>X Axis</div>\n                <div>\n                  <select onChange={(e) => setAreaChartXAttr(e.target.value)}>\n                    {dataKey.map((key) => (\n                      <option key={key} value={key}>\n                        {key}\n                      </option>\n                    ))}\n                  </select>\n                </div>\n              </div>\n              <div className=\"y-axis\">\n                <div>Y Axis</div>\n                <div>\n                  <select onChange={(e) => setAreaChartYAttr(e.target.value)}>\n                    {dataKey.map((key) => (\n                      <option key={key} value={key}>\n                        {key}\n                      </option>\n                    ))}\n                  </select>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <Footer />\n    </>\n  )\n}\n\nexport default VisualizerAQ\n"]},"metadata":{},"sourceType":"module"}