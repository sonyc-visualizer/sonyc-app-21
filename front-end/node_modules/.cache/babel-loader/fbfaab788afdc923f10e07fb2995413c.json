{"ast":null,"code":"var _jsxFileName = \"/Users/almazhan/Desktop/TV-Tracker-sonyc/front-end/src/graphs/GraphDisplay.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react'; //Important! Below the mock data is imported from the utils folder\n\nimport { dataGeo } from '../utils/MockData.js';\nimport { dataAQ } from '../utils/MockDataAq.js';\nimport Histogram from './Histogram';\nimport BarChart from './BarChart';\nimport BoxPlot from './BoxPlot';\nimport Correlation from './Correlation';\nimport AreaChart from './AreaChart';\nimport HeatMap from './HeatMap';\nimport LineGraph from './LineGraph';\nimport ScatterPlot from './ScatterPlot';\nimport StackedBarChart from './StackedBarChart';\nimport './GraphDisplay.css';\nimport { useState } from 'react'; //Main component that displays your created graph\n//Components in React can be in the form of functions, classes etc.\n//and consist of both javascript code and html code (html is the return value)\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction GraphDisplay() {\n  _s();\n\n  const dataKeys = Object.keys(dataGeo[0]);\n  const dataKeysAq = Object.keys(dataAQ[0]);\n  const [histoXAttr, setHistoXAttr] = useState('ID'); //scatter plot attributes\n\n  const [ScatoXAttr, setScatoXAttr] = useState('ID');\n  const [ScatoYAttr, setScatoYAttr] = useState('ID'); //box plot attributes\n\n  const [boxPlotXAttr, setBoxPlotXAttr] = useState('ID');\n  const [boxPlotYAttr, setBoxPlotYAttr] = useState('Time'); //line graph attributes\n\n  const [lineGraphXAttr, setlineGraphXAttr] = useState('ID');\n  const [lineGraphYAttr, setlineGraphYAttr] = useState('ID'); //bar chart attributes\n\n  const [barChartXAttr, setBarChartXAttr] = useState('ID');\n  const [barChartYAttr, setBarChartYAttr] = useState('ID'); //Below is the html code (return value)\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"block\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"graph-wrapper\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"A page that displays your graph component\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"graph-block\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Histogram\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Histogram, {\n            data: dataAQ,\n            xAxisAttribute: histoXAttr //title={`People from Different ${histoXAttr}`}\n            ,\n            title: `Histogram Distribution of Air Quality data`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: \"X Axis\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"select\", {\n                onChange: e => setHistoXAttr(e.target.value),\n                children: dataKeysAq.map(key => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: key,\n                  children: key\n                }, key, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 62,\n                  columnNumber: 21\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"graph-block\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Scatter Plot\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ScatterPlot, {\n            data: dataGeo,\n            xAxisAttribute: ScatoXAttr,\n            yAxisAttribute: ScatoYAttr\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"wrap-axis\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"x-axis\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: \"X Axis\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(\"select\", {\n                  onChange: e => setScatoXAttr(e.target.value),\n                  children: dataKeys.map(key => /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: key,\n                    children: key\n                  }, key, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 83,\n                    columnNumber: 23\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 81,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"y-axis\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: \"Y Axis\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(\"select\", {\n                  onChange: e => setScatoYAttr(e.target.value),\n                  children: dataKeys.map(key => /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: key,\n                    children: key\n                  }, key, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 95,\n                    columnNumber: 23\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 93,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"graph-block\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"BoxPlot\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(BoxPlot, {\n            data: dataGeo,\n            xAxisAttribute: boxPlotXAttr,\n            yAxisAttribute: boxPlotYAttr\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"wrap-axis\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"x-axis\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: \"X Axis\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 113,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(\"select\", {\n                  onChange: e => setBoxPlotXAttr(e.target.value),\n                  children: dataKeys.map(key => /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: key,\n                    children: key\n                  }, key, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 117,\n                    columnNumber: 23\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 115,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 114,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"y-axis\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: \"Y Axis\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 125,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(\"select\", {\n                  onChange: e => setBoxPlotYAttr(e.target.value),\n                  children: dataKeys.map(key => /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: key,\n                    children: key\n                  }, key, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 129,\n                    columnNumber: 23\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 127,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 126,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"graph-block\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Line Graph\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(LineGraph, {\n            data: dataGeo,\n            xAxisAttribute: lineGraphXAttr,\n            yAxisAttribute: lineGraphYAttr\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"wrap-axis\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"x-axis\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: \"X Axis\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 147,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(\"select\", {\n                  onChange: e => setlineGraphXAttr(e.target.value),\n                  children: dataKeys.map(key => /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: key,\n                    children: key\n                  }, key, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 151,\n                    columnNumber: 23\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 149,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 148,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"y-axis\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: \"Y Axis\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 159,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(\"select\", {\n                  onChange: e => setlineGraphYAttr(e.target.value),\n                  children: dataKeys.map(key => /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: key,\n                    children: key\n                  }, key, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 163,\n                    columnNumber: 23\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 161,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 160,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(GraphDisplay, \"3cG6zMUz7G8iXk4wVE8HJAFyHCQ=\");\n\n_c = GraphDisplay;\nexport default GraphDisplay;\n\nvar _c;\n\n$RefreshReg$(_c, \"GraphDisplay\");","map":{"version":3,"sources":["/Users/almazhan/Desktop/TV-Tracker-sonyc/front-end/src/graphs/GraphDisplay.js"],"names":["React","dataGeo","dataAQ","Histogram","BarChart","BoxPlot","Correlation","AreaChart","HeatMap","LineGraph","ScatterPlot","StackedBarChart","useState","GraphDisplay","dataKeys","Object","keys","dataKeysAq","histoXAttr","setHistoXAttr","ScatoXAttr","setScatoXAttr","ScatoYAttr","setScatoYAttr","boxPlotXAttr","setBoxPlotXAttr","boxPlotYAttr","setBoxPlotYAttr","lineGraphXAttr","setlineGraphXAttr","lineGraphYAttr","setlineGraphYAttr","barChartXAttr","setBarChartXAttr","barChartYAttr","setBarChartYAttr","e","target","value","map","key"],"mappings":"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","sourcesContent":["import React from 'react'\n//Important! Below the mock data is imported from the utils folder\nimport { dataGeo } from '../utils/MockData.js'\nimport { dataAQ } from '../utils/MockDataAq.js'\n\nimport Histogram from './Histogram'\nimport BarChart from './BarChart'\nimport BoxPlot from './BoxPlot'\nimport Correlation from './Correlation'\nimport AreaChart from './AreaChart'\nimport HeatMap from './HeatMap'\nimport LineGraph from './LineGraph'\nimport ScatterPlot from './ScatterPlot'\nimport StackedBarChart from './StackedBarChart'\nimport './GraphDisplay.css'\n\nimport { useState } from 'react'\n\n//Main component that displays your created graph\n//Components in React can be in the form of functions, classes etc.\n//and consist of both javascript code and html code (html is the return value)\nfunction GraphDisplay() {\n  const dataKeys = Object.keys(dataGeo[0])\n  const dataKeysAq = Object.keys(dataAQ[0])\n  const [histoXAttr, setHistoXAttr] = useState('ID')\n\n  //scatter plot attributes\n  const [ScatoXAttr, setScatoXAttr] = useState('ID')\n  const [ScatoYAttr, setScatoYAttr] = useState('ID')\n\n  //box plot attributes\n  const [boxPlotXAttr, setBoxPlotXAttr] = useState('ID')\n  const [boxPlotYAttr, setBoxPlotYAttr] = useState('Time')\n\n  //line graph attributes\n  const [lineGraphXAttr, setlineGraphXAttr] = useState('ID')\n  const [lineGraphYAttr, setlineGraphYAttr] = useState('ID')\n\n  //bar chart attributes\n  const [barChartXAttr, setBarChartXAttr] = useState('ID')\n  const [barChartYAttr, setBarChartYAttr] = useState('ID')\n\n  //Below is the html code (return value)\n  return (\n    <>\n      <div className=\"block\">\n        <div className=\"graph-wrapper\">\n          <h2>A page that displays your graph component</h2>\n          <div className=\"graph-block\">\n            <p>Histogram</p>\n            <Histogram\n              data={dataAQ}\n              xAxisAttribute={histoXAttr}\n              //title={`People from Different ${histoXAttr}`}\n              title={`Histogram Distribution of Air Quality data`}></Histogram>\n\n            <div>\n              <div>X Axis</div>\n              <div>\n                <select onChange={(e) => setHistoXAttr(e.target.value)}>\n                  {dataKeysAq.map((key) => (\n                    <option key={key} value={key}>\n                      {key}\n                    </option>\n                  ))}\n                </select>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"graph-block\">\n            <p>Scatter Plot</p>\n            <ScatterPlot\n              data={dataGeo}\n              xAxisAttribute={ScatoXAttr}\n              yAxisAttribute={ScatoYAttr}></ScatterPlot>\n            <div className=\"wrap-axis\">\n              <div className=\"x-axis\">\n                <div>X Axis</div>\n                <div>\n                  <select onChange={(e) => setScatoXAttr(e.target.value)}>\n                    {dataKeys.map((key) => (\n                      <option key={key} value={key}>\n                        {key}\n                      </option>\n                    ))}\n                  </select>\n                </div>\n              </div>\n              <div className=\"y-axis\">\n                <div>Y Axis</div>\n                <div>\n                  <select onChange={(e) => setScatoYAttr(e.target.value)}>\n                    {dataKeys.map((key) => (\n                      <option key={key} value={key}>\n                        {key}\n                      </option>\n                    ))}\n                  </select>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"graph-block\">\n            <p>BoxPlot</p>\n            <BoxPlot\n              data={dataGeo}\n              xAxisAttribute={boxPlotXAttr}\n              yAxisAttribute={boxPlotYAttr}></BoxPlot>\n            <div className=\"wrap-axis\">\n              <div className=\"x-axis\">\n                <div>X Axis</div>\n                <div>\n                  <select onChange={(e) => setBoxPlotXAttr(e.target.value)}>\n                    {dataKeys.map((key) => (\n                      <option key={key} value={key}>\n                        {key}\n                      </option>\n                    ))}\n                  </select>\n                </div>\n              </div>\n              <div className=\"y-axis\">\n                <div>Y Axis</div>\n                <div>\n                  <select onChange={(e) => setBoxPlotYAttr(e.target.value)}>\n                    {dataKeys.map((key) => (\n                      <option key={key} value={key}>\n                        {key}\n                      </option>\n                    ))}\n                  </select>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"graph-block\">\n            <p>Line Graph</p>\n            <LineGraph\n              data={dataGeo}\n              xAxisAttribute={lineGraphXAttr}\n              yAxisAttribute={lineGraphYAttr}></LineGraph>\n            <div className=\"wrap-axis\">\n              <div className=\"x-axis\">\n                <div>X Axis</div>\n                <div>\n                  <select onChange={(e) => setlineGraphXAttr(e.target.value)}>\n                    {dataKeys.map((key) => (\n                      <option key={key} value={key}>\n                        {key}\n                      </option>\n                    ))}\n                  </select>\n                </div>\n              </div>\n              <div className=\"y-axis\">\n                <div>Y Axis</div>\n                <div>\n                  <select onChange={(e) => setlineGraphYAttr(e.target.value)}>\n                    {dataKeys.map((key) => (\n                      <option key={key} value={key}>\n                        {key}\n                      </option>\n                    ))}\n                  </select>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  )\n}\n\nexport default GraphDisplay\n"]},"metadata":{},"sourceType":"module"}