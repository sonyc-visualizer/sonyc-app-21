{"ast":null,"code":"var _jsxFileName = \"/Users/almazhan/Desktop/TV-Tracker-sonyc/front-end/src/graphs/Visualizer.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react'; //Important! Below the mock data is imported from the utils folder\n\nimport { dataGeo } from '../utils/MockData.js';\nimport { dataAQ } from '../utils/MockDataAq.js';\nimport Header from '../components/Header';\nimport Footer from '../components/Footer';\nimport Selector from '../components/Selector';\nimport Histogram from './Histogram';\nimport BarChart from './BarChart';\nimport BoxPlot from './BoxPlot';\nimport Correlation from './Correlation';\nimport AreaChart from './AreaChart';\nimport HeatMap from './HeatMap';\nimport LineGraph from './LineGraph';\nimport ScatterPlot from './ScatterPlot';\nimport './Visualizer.css';\nimport DropdownMenu from '../components/DropdownMenu';\nimport { useState } from 'react'; //Main component that displays your created graph\n//Components in React can be in the form of functions, classes etc.\n//and consist of both javascript code and html code (html is the return value)\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Visualizer() {\n  _s();\n\n  const labelDS = 'Select a Dataset';\n  const [database, setDS] = useState('');\n  const datasetNames = ['Air Quality Dataset', 'Noise Quality Dataset'];\n  let display = true;\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const graphObject = {\n      database\n    };\n    console.log(graphObject);\n  };\n\n  const dataKeys = Object.keys(dataGeo[0]);\n  const dataKeysAq = Object.keys(dataAQ[0]);\n  const [histoXAttr, setHistoXAttr] = useState('ID');\n  let dataKey = Object.keys(dataGeo[0]); //scatter plot attributes\n\n  const [ScatoXAttr, setScatoXAttr] = useState('ID');\n  const [ScatoYAttr, setScatoYAttr] = useState('ID'); //box plot attributes\n\n  const [boxPlotXAttr, setBoxPlotXAttr] = useState('ID');\n  const [boxPlotYAttr, setBoxPlotYAttr] = useState('Time'); //line graph attributes\n\n  const [lineGraphXAttr, setlineGraphXAttr] = useState('ID');\n  const [lineGraphYAttr, setlineGraphYAttr] = useState('ID'); //bar chart attributes\n\n  const [barChartXAttr, setBarChartXAttr] = useState('ID');\n  const [barChartYAttr, setBarChartYAttr] = useState('ID'); //area chart attributes\n\n  const [areaChartXAttr, setAreaChartXAttr] = useState('ID');\n  const [areaChartYAttr, setAreaChartYAttr] = useState('ID'); //Below is the html code (return value)\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"home-graphs\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"header-text-graphs\",\n        children: \"SONYC Visualizer App\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"graph-wrapper\",\n        children: [/*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(DropdownMenu, {\n            selected: database,\n            setSelected: setDS,\n            label: labelDS,\n            options: datasetNames\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this), display ? /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Selected Dataset is \", database]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 24\n          }, this) : '', database == 'Air Quality Dataset' ? dataKey = Object.keys(dataAQ[0]) : dataKey = Object.keys(dataGeo[0]), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn\",\n            children: \"Select\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"graph-block\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Histogram\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Histogram, {\n            data: dataAQ,\n            xAxisAttribute: histoXAttr //title={`People from Different ${histoXAttr}`}\n            ,\n            title: `Histogram Distribution of Air Quality data`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: \"X Axis\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"select\", {\n                onChange: e => setHistoXAttr(e.target.value),\n                children: dataKey.map(key => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: key,\n                  children: key\n                }, key, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 95,\n                  columnNumber: 21\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"graph-block\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Scatter Plot\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ScatterPlot, {\n            data: dataGeo,\n            xAxisAttribute: ScatoXAttr,\n            yAxisAttribute: ScatoYAttr\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"wrap-axis\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"x-axis\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: \"X Axis\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(\"select\", {\n                  onChange: e => setScatoXAttr(e.target.value),\n                  children: dataKey.map(key => /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: key,\n                    children: key\n                  }, key, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 116,\n                    columnNumber: 23\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 114,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 113,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"y-axis\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: \"Y Axis\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 124,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(\"select\", {\n                  onChange: e => setScatoYAttr(e.target.value),\n                  children: dataKey.map(key => /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: key,\n                    children: key\n                  }, key, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 128,\n                    columnNumber: 23\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 126,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 125,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"graph-block\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"BoxPlot\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(BoxPlot, {\n            data: dataGeo,\n            xAxisAttribute: boxPlotXAttr,\n            yAxisAttribute: boxPlotYAttr\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"wrap-axis\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"x-axis\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: \"X Axis\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 146,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(\"select\", {\n                  onChange: e => setBoxPlotXAttr(e.target.value),\n                  children: dataKey.map(key => /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: key,\n                    children: key\n                  }, key, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 150,\n                    columnNumber: 23\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 148,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 147,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"y-axis\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: \"Y Axis\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 158,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(\"select\", {\n                  onChange: e => setBoxPlotYAttr(e.target.value),\n                  children: dataKey.map(key => /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: key,\n                    children: key\n                  }, key, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 162,\n                    columnNumber: 23\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 160,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 159,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"graph-block\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Line Graph\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(LineGraph, {\n            data: dataGeo,\n            xAxisAttribute: lineGraphXAttr,\n            yAxisAttribute: lineGraphYAttr\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"wrap-axis\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"x-axis\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: \"X Axis\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 180,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(\"select\", {\n                  onChange: e => setlineGraphXAttr(e.target.value),\n                  children: dataKey.map(key => /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: key,\n                    children: key\n                  }, key, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 184,\n                    columnNumber: 23\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 182,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 181,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"y-axis\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: \"Y Axis\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 192,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(\"select\", {\n                  onChange: e => setlineGraphYAttr(e.target.value),\n                  children: dataKey.map(key => /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: key,\n                    children: key\n                  }, key, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 196,\n                    columnNumber: 23\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 194,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 193,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"graph-block\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Bar Chart\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(BarChart, {\n            data: dataGeo,\n            xAxisAttribute: barChartXAttr,\n            yAxisAttribute: barChartYAttr\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"wrap-axis\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"x-axis\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: \"X Axis\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 214,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(\"select\", {\n                  onChange: e => setBarChartXAttr(e.target.value),\n                  children: dataKey.map(key => /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: key,\n                    children: key\n                  }, key, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 218,\n                    columnNumber: 23\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 216,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 215,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"y-axis\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: \"Y Axis\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 226,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(\"select\", {\n                  onChange: e => setBarChartYAttr(e.target.value),\n                  children: dataKey.map(key => /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: key,\n                    children: key\n                  }, key, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 230,\n                    columnNumber: 23\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 228,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 227,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 225,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"graph-block\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Area Chart\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(AreaChart, {\n            data: dataGeo,\n            xAxisAttribute: areaChartXAttr,\n            yAxisAttribute: areaChartYAttr\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"wrap-axis\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"x-axis\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: \"X Axis\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 248,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(\"select\", {\n                  onChange: e => setAreaChartXAttr(e.target.value),\n                  children: dataKey.map(key => /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: key,\n                    children: key\n                  }, key, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 252,\n                    columnNumber: 23\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 250,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 249,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 247,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"y-axis\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: \"Y Axis\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 260,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(\"select\", {\n                  onChange: e => setAreaChartYAttr(e.target.value),\n                  children: dataKey.map(key => /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: key,\n                    children: key\n                  }, key, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 264,\n                    columnNumber: 23\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 262,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 261,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 259,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Visualizer, \"z0T6qeFrPKPVfGPlUKa5GxHBk4Y=\");\n\n_c = Visualizer;\nexport default Visualizer;\n\nvar _c;\n\n$RefreshReg$(_c, \"Visualizer\");","map":{"version":3,"sources":["/Users/almazhan/Desktop/TV-Tracker-sonyc/front-end/src/graphs/Visualizer.js"],"names":["React","dataGeo","dataAQ","Header","Footer","Selector","Histogram","BarChart","BoxPlot","Correlation","AreaChart","HeatMap","LineGraph","ScatterPlot","DropdownMenu","useState","Visualizer","labelDS","database","setDS","datasetNames","display","handleSubmit","e","preventDefault","graphObject","console","log","dataKeys","Object","keys","dataKeysAq","histoXAttr","setHistoXAttr","dataKey","ScatoXAttr","setScatoXAttr","ScatoYAttr","setScatoYAttr","boxPlotXAttr","setBoxPlotXAttr","boxPlotYAttr","setBoxPlotYAttr","lineGraphXAttr","setlineGraphXAttr","lineGraphYAttr","setlineGraphYAttr","barChartXAttr","setBarChartXAttr","barChartYAttr","setBarChartYAttr","areaChartXAttr","setAreaChartXAttr","areaChartYAttr","setAreaChartYAttr","target","value","map","key"],"mappings":"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","sourcesContent":["import React from 'react'\n//Important! Below the mock data is imported from the utils folder\nimport { dataGeo } from '../utils/MockData.js'\nimport { dataAQ } from '../utils/MockDataAq.js'\nimport Header from '../components/Header'\nimport Footer from '../components/Footer'\nimport Selector from '../components/Selector'\nimport Histogram from './Histogram'\nimport BarChart from './BarChart'\nimport BoxPlot from './BoxPlot'\nimport Correlation from './Correlation'\nimport AreaChart from './AreaChart'\nimport HeatMap from './HeatMap'\nimport LineGraph from './LineGraph'\nimport ScatterPlot from './ScatterPlot'\nimport './Visualizer.css'\nimport DropdownMenu from '../components/DropdownMenu'\n\nimport { useState } from 'react'\n\n//Main component that displays your created graph\n//Components in React can be in the form of functions, classes etc.\n//and consist of both javascript code and html code (html is the return value)\nfunction Visualizer() {\n  const labelDS = 'Select a Dataset'\n  const [database, setDS] = useState('')\n  const datasetNames = ['Air Quality Dataset', 'Noise Quality Dataset']\n  let display = true\n  const handleSubmit = (e) => {\n    e.preventDefault()\n    const graphObject = { database }\n    console.log(graphObject)\n  }\n  const dataKeys = Object.keys(dataGeo[0])\n  const dataKeysAq = Object.keys(dataAQ[0])\n  const [histoXAttr, setHistoXAttr] = useState('ID')\n  let dataKey = Object.keys(dataGeo[0])\n  //scatter plot attributes\n  const [ScatoXAttr, setScatoXAttr] = useState('ID')\n  const [ScatoYAttr, setScatoYAttr] = useState('ID')\n\n  //box plot attributes\n  const [boxPlotXAttr, setBoxPlotXAttr] = useState('ID')\n  const [boxPlotYAttr, setBoxPlotYAttr] = useState('Time')\n\n  //line graph attributes\n  const [lineGraphXAttr, setlineGraphXAttr] = useState('ID')\n  const [lineGraphYAttr, setlineGraphYAttr] = useState('ID')\n\n  //bar chart attributes\n  const [barChartXAttr, setBarChartXAttr] = useState('ID')\n  const [barChartYAttr, setBarChartYAttr] = useState('ID')\n\n  //area chart attributes\n  const [areaChartXAttr, setAreaChartXAttr] = useState('ID')\n  const [areaChartYAttr, setAreaChartYAttr] = useState('ID')\n\n  //Below is the html code (return value)\n  return (\n    <>\n      <Header />\n      <div className=\"home-graphs\">\n        <h2 className=\"header-text-graphs\">SONYC Visualizer App</h2>\n\n        <div className=\"graph-wrapper\">\n          <form onSubmit={handleSubmit}>\n            <DropdownMenu\n              selected={database}\n              setSelected={setDS}\n              label={labelDS}\n              options={datasetNames}\n            />\n            <br />\n            {display ? <p>Selected Dataset is {database}</p> : ''}\n            {database == 'Air Quality Dataset'\n              ? (dataKey = Object.keys(dataAQ[0]))\n              : (dataKey = Object.keys(dataGeo[0]))}\n            <br />\n            <br />\n            <button className=\"btn\">Select</button>\n          </form>\n          <div className=\"graph-block\">\n            <p>Histogram</p>\n            <Histogram\n              data={dataAQ}\n              xAxisAttribute={histoXAttr}\n              //title={`People from Different ${histoXAttr}`}\n              title={`Histogram Distribution of Air Quality data`}></Histogram>\n\n            <div>\n              <div>X Axis</div>\n              <div>\n                <select onChange={(e) => setHistoXAttr(e.target.value)}>\n                  {dataKey.map((key) => (\n                    <option key={key} value={key}>\n                      {key}\n                    </option>\n                  ))}\n                </select>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"graph-block\">\n            <p>Scatter Plot</p>\n            <ScatterPlot\n              data={dataGeo}\n              xAxisAttribute={ScatoXAttr}\n              yAxisAttribute={ScatoYAttr}></ScatterPlot>\n            <div className=\"wrap-axis\">\n              <div className=\"x-axis\">\n                <div>X Axis</div>\n                <div>\n                  <select onChange={(e) => setScatoXAttr(e.target.value)}>\n                    {dataKey.map((key) => (\n                      <option key={key} value={key}>\n                        {key}\n                      </option>\n                    ))}\n                  </select>\n                </div>\n              </div>\n              <div className=\"y-axis\">\n                <div>Y Axis</div>\n                <div>\n                  <select onChange={(e) => setScatoYAttr(e.target.value)}>\n                    {dataKey.map((key) => (\n                      <option key={key} value={key}>\n                        {key}\n                      </option>\n                    ))}\n                  </select>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"graph-block\">\n            <p>BoxPlot</p>\n            <BoxPlot\n              data={dataGeo}\n              xAxisAttribute={boxPlotXAttr}\n              yAxisAttribute={boxPlotYAttr}></BoxPlot>\n            <div className=\"wrap-axis\">\n              <div className=\"x-axis\">\n                <div>X Axis</div>\n                <div>\n                  <select onChange={(e) => setBoxPlotXAttr(e.target.value)}>\n                    {dataKey.map((key) => (\n                      <option key={key} value={key}>\n                        {key}\n                      </option>\n                    ))}\n                  </select>\n                </div>\n              </div>\n              <div className=\"y-axis\">\n                <div>Y Axis</div>\n                <div>\n                  <select onChange={(e) => setBoxPlotYAttr(e.target.value)}>\n                    {dataKey.map((key) => (\n                      <option key={key} value={key}>\n                        {key}\n                      </option>\n                    ))}\n                  </select>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"graph-block\">\n            <p>Line Graph</p>\n            <LineGraph\n              data={dataGeo}\n              xAxisAttribute={lineGraphXAttr}\n              yAxisAttribute={lineGraphYAttr}></LineGraph>\n            <div className=\"wrap-axis\">\n              <div className=\"x-axis\">\n                <div>X Axis</div>\n                <div>\n                  <select onChange={(e) => setlineGraphXAttr(e.target.value)}>\n                    {dataKey.map((key) => (\n                      <option key={key} value={key}>\n                        {key}\n                      </option>\n                    ))}\n                  </select>\n                </div>\n              </div>\n              <div className=\"y-axis\">\n                <div>Y Axis</div>\n                <div>\n                  <select onChange={(e) => setlineGraphYAttr(e.target.value)}>\n                    {dataKey.map((key) => (\n                      <option key={key} value={key}>\n                        {key}\n                      </option>\n                    ))}\n                  </select>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"graph-block\">\n            <p>Bar Chart</p>\n            <BarChart\n              data={dataGeo}\n              xAxisAttribute={barChartXAttr}\n              yAxisAttribute={barChartYAttr}></BarChart>\n            <div className=\"wrap-axis\">\n              <div className=\"x-axis\">\n                <div>X Axis</div>\n                <div>\n                  <select onChange={(e) => setBarChartXAttr(e.target.value)}>\n                    {dataKey.map((key) => (\n                      <option key={key} value={key}>\n                        {key}\n                      </option>\n                    ))}\n                  </select>\n                </div>\n              </div>\n              <div className=\"y-axis\">\n                <div>Y Axis</div>\n                <div>\n                  <select onChange={(e) => setBarChartYAttr(e.target.value)}>\n                    {dataKey.map((key) => (\n                      <option key={key} value={key}>\n                        {key}\n                      </option>\n                    ))}\n                  </select>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"graph-block\">\n            <p>Area Chart</p>\n            <AreaChart\n              data={dataGeo}\n              xAxisAttribute={areaChartXAttr}\n              yAxisAttribute={areaChartYAttr}></AreaChart>\n            <div className=\"wrap-axis\">\n              <div className=\"x-axis\">\n                <div>X Axis</div>\n                <div>\n                  <select onChange={(e) => setAreaChartXAttr(e.target.value)}>\n                    {dataKey.map((key) => (\n                      <option key={key} value={key}>\n                        {key}\n                      </option>\n                    ))}\n                  </select>\n                </div>\n              </div>\n              <div className=\"y-axis\">\n                <div>Y Axis</div>\n                <div>\n                  <select onChange={(e) => setAreaChartYAttr(e.target.value)}>\n                    {dataKey.map((key) => (\n                      <option key={key} value={key}>\n                        {key}\n                      </option>\n                    ))}\n                  </select>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <Footer />\n    </>\n  )\n}\n\nexport default Visualizer\n"]},"metadata":{},"sourceType":"module"}